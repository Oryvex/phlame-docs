"use strict";(self.webpackChunktest_api=self.webpackChunktest_api||[]).push([[7924],{8578:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>s,metadata:()=>c,toc:()=>d});var i=t(4848),r=t(8453);const s={title:"Getting Started with Phlame",sidebar_position:2},o=void 0,c={id:"getting-started",title:"Getting Started with Phlame",description:"To begin using Phlame, you'll need to:",source:"@site/docs/getting-started.md",sourceDirName:".",slug:"/getting-started",permalink:"/docs/getting-started",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{title:"Getting Started with Phlame",sidebar_position:2},sidebar:"tutorialSidebar",previous:{title:"Introduction",permalink:"/docs/intro"},next:{title:"Routing Guide",permalink:"/docs/category/routing-guide"}},l={},d=[];function a(e){const n={a:"a",code:"code",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"To begin using Phlame, you'll need to:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Download the Framework: Access the source code from the official Phlame GitHub repository: ",(0,i.jsx)(n.a,{href:"https://github.com/Oryvex/Phlame.git",children:"https://github.com/Oryvex/Phlame.git"})]}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["You can use ",(0,i.jsx)(n.code,{children:"git clone"}),"."]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"git clone https://github.com/Oryvex/Phlame\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Or you can download the direct zip file"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Extract the Files: Phlame comes with it's directory structure, so you can easily start using it just after extracting it"}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Define Your Routes: Use Phlame's routing mechanism to map incoming requests to specific functions in your code that handle the API logic."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:'title="index.php"',children:"<?php \r\nsession_start();\r\nrequire_once '.config/_init.php';\r\n\r\n$router = new Router();\r\n\r\n$router->addRoute('/', function() {\r\n    Source::set(\"index\");\r\n});\r\n\r\n$router->route();\r\n?>\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsx)(n.p,{children:"Build Your API Logic: Implement the functionalities for each endpoint within the corresponding functions, utilizing Phlame's built-in features and your own custom logic as needed."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-php",metastring:'title="source/index.src.php"',children:"<?php \r\nSource::empty($type, 'json');\r\n$segment = Api::segment('out', [\"test\" => \"success\"]);\r\nApi::send($segment, format: $type);\r\n?>\n"})}),"\n"]}),"\n",(0,i.jsxs)(n.li,{children:["\n",(0,i.jsxs)(n.p,{children:["Check The Output: The above example, routes the endpoint ",(0,i.jsx)(n.code,{children:"/"})," to the source ",(0,i.jsx)(n.code,{children:"index"})," at ",(0,i.jsx)(n.code,{children:"source/index.src.php"}),". This will output the following"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-json",metastring:'title="https://yourwebsite.link/"',children:'{\r\n    "segments": {\r\n        "out": {\r\n            "test": "success"\r\n        }\r\n    }\r\n}\n'})}),"\n"]}),"\n"]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var i=t(6540);const r={},s=i.createContext(r);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);