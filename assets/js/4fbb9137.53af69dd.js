"use strict";(self.webpackChunktest_api=self.webpackChunktest_api||[]).push([[9057],{4965:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>h,frontMatter:()=>i,metadata:()=>r,toc:()=>a});var o=s(4848),n=s(8453);const i={title:"Request Body",sidebar_position:4},d=void 0,r={id:"handling-requests/body-method",title:"Request Body",description:"In Phlame's API development toolkit, the body method within the API class provides a straightforward approach to handle HTTP request bodies in incoming requests. This method offers developers flexibility and simplicity, enabling them to process request payloads efficiently and execute custom logic based on the contents. Let's explore the syntax and usage of the body method:",source:"@site/docs/handling-requests/body-method.md",sourceDirName:"handling-requests",slug:"/handling-requests/body-method",permalink:"/docs/handling-requests/body-method",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Request Body",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Request Headers",permalink:"/docs/handling-requests/headers-method"},next:{title:"Request Parameters",permalink:"/docs/handling-requests/params-method"}},l={},a=[{value:"Retrieving Request Body",id:"retrieving-request-body",level:3},{value:"<code>Api::body()</code>:",id:"apibody",level:4},{value:"Handling Results with Callbacks",id:"handling-results-with-callbacks",level:3},{value:"Then Callback:",id:"then-callback",level:4},{value:"Orelse Callback:",id:"orelse-callback",level:4},{value:"Example of the Body Method",id:"example-of-the-body-method",level:3}];function c(e){const t={a:"a",admonition:"admonition",code:"code",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(t.p,{children:["In Phlame's API development toolkit, the ",(0,o.jsx)(t.code,{children:"body"})," method within the API class provides a straightforward approach to handle HTTP request bodies in incoming requests. This method offers developers flexibility and simplicity, enabling them to process request payloads efficiently and execute custom logic based on the contents. Let's explore the syntax and usage of the ",(0,o.jsx)(t.code,{children:"body"})," method:"]}),"\n",(0,o.jsx)(t.h3,{id:"retrieving-request-body",children:"Retrieving Request Body"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.code,{children:"body"})," method allows developers to access the content of the HTTP request body. Here's how you can use it:"]}),"\n",(0,o.jsxs)(t.h4,{id:"apibody",children:[(0,o.jsx)(t.code,{children:"Api::body()"}),":"]}),"\n",(0,o.jsx)(t.p,{children:"This method retrieves the entire request body and returns it as a string, with a status, true, if the body exists."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-php",children:"Api::body();\n"})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["Other functions of the Body method functions similar to the ",(0,o.jsx)(t.code,{children:"headers"})," method, it takes the same parameters as the ",(0,o.jsx)(t.code,{children:"headers"})," method, check the ",(0,o.jsx)(t.a,{href:"./headers-method",children:"headers method"})," out for more information"]})}),"\n",(0,o.jsx)(t.h3,{id:"handling-results-with-callbacks",children:"Handling Results with Callbacks"}),"\n",(0,o.jsxs)(t.p,{children:["Similar to the ",(0,o.jsx)(t.code,{children:"headers"})," method, the ",(0,o.jsx)(t.code,{children:"body"})," method also supports ",(0,o.jsx)(t.code,{children:"then:"})," and ",(0,o.jsx)(t.code,{children:"orelse:"})," callbacks, allowing developers to execute custom logic based on the contents of the request body:"]}),"\n",(0,o.jsx)(t.h4,{id:"then-callback",children:"Then Callback:"}),"\n",(0,o.jsxs)(t.p,{children:["This callback runs when the body retrieval is successful, and the ",(0,o.jsx)(t.code,{children:"status"})," is ",(0,o.jsx)(t.code,{children:"true"}),", providing developers with the request body content. It allows for processing and manipulation of the request data."]}),"\n",(0,o.jsx)(t.h4,{id:"orelse-callback",children:"Orelse Callback:"}),"\n",(0,o.jsxs)(t.p,{children:["In case the body retrieval fails, and the ",(0,o.jsx)(t.code,{children:"status"})," is ",(0,o.jsx)(t.code,{children:"false"}),", the ",(0,o.jsx)(t.code,{children:"orelse:"})," callback is executed. This provides developers with a fallback mechanism to handle such scenarios gracefully."]}),"\n",(0,o.jsxs)(t.admonition,{type:"tip",children:[(0,o.jsxs)(t.p,{children:["You can utilize the ",(0,o.jsx)(t.code,{children:"$rout"})," variable within the callback functions to access the data returned by the ",(0,o.jsx)(t.code,{children:"body"})," method, which includes:"]}),(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"Status"}),"\n",(0,o.jsx)(t.li,{children:"Data"}),"\n"]})]}),"\n",(0,o.jsx)(t.h3,{id:"example-of-the-body-method",children:"Example of the Body Method"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-php",metastring:'title="<filename>.src.php"',children:'<?php\r\nApi::body(\r\n    key: "key",\r\n    value: "value",\r\n    then: function($rout) {\r\n        // Custom logic to process the request body\r\n        $body = $rout[\'data\']; // Accessing the request body content\r\n    },\r\n    orelse: function() {\r\n        // Fallback logic for handling empty or malformed request bodies\r\n    }\r\n);\r\n?>\n'})}),"\n",(0,o.jsxs)(t.p,{children:["This example illustrates how to use the ",(0,o.jsx)(t.code,{children:"body"})," method to retrieve and process the content of the HTTP request body. Depending on the success or failure of the body retrieval, the appropriate callback is executed, allowing developers to handle request body processing effectively."]})]})}function h(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(c,{...e})}):c(e)}},8453:(e,t,s)=>{s.d(t,{R:()=>d,x:()=>r});var o=s(6540);const n={},i=o.createContext(n);function d(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:d(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);