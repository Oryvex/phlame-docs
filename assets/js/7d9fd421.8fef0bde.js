"use strict";(self.webpackChunktest_api=self.webpackChunktest_api||[]).push([[8280],{4350:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>s,toc:()=>l});var o=t(4848),r=t(8453);const i={title:"Source Type Control",sidebar_position:4},a=void 0,s={id:"routing-guide/source-type",title:"Source Type Control",description:"In Phlame, the Source class serves as a tool for managing variables and controlling the content displayed on web pages linked to your router. It offers functionality to streamline code organization and enhance the user experience by allowing the developer to adjust the content based on necessary factors.",source:"@site/docs/routing-guide/source-type.md",sourceDirName:"routing-guide",slug:"/routing-guide/source-type",permalink:"/docs/routing-guide/source-type",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{title:"Source Type Control",sidebar_position:4},sidebar:"tutorialSidebar",previous:{title:"Dynamic Routing",permalink:"/docs/routing-guide/dynamic-routing"},next:{title:"Setting Source File",permalink:"/docs/routing-guide/setting-source"}},c={},l=[{value:"Utilizing Source for Changing Content-Type",id:"utilizing-source-for-changing-content-type",level:3},{value:"Syntax:",id:"syntax",level:4},{value:"Example:",id:"example",level:4},{value:"Example of a Phlame Source Type Control",id:"example-of-a-phlame-source-type-control",level:3}];function u(e){const n={admonition:"admonition",code:"code",h3:"h3",h4:"h4",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.p,{children:"In Phlame, the Source class serves as a tool for managing variables and controlling the content displayed on web pages linked to your router. It offers functionality to streamline code organization and enhance the user experience by allowing the developer to adjust the content based on necessary factors."}),"\n",(0,o.jsx)(n.h3,{id:"utilizing-source-for-changing-content-type",children:"Utilizing Source for Changing Content-Type"}),"\n",(0,o.jsx)(n.p,{children:"Source can be use for changing the content type of the output, this allows you to change the content type of the sent output, in a way that is compatible with what your application requires."}),"\n",(0,o.jsx)(n.h4,{id:"syntax",children:"Syntax:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"Source::type(<content type necessary>);\n"})}),"\n",(0,o.jsx)(n.h4,{id:"example",children:"Example:"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",children:"Source::type('application/json');\n"})}),"\n",(0,o.jsx)(n.p,{children:"You can use any type that are allowed, as its a simply just changing headers."}),"\n",(0,o.jsx)(n.admonition,{type:"note",children:(0,o.jsxs)(n.p,{children:["Use the ",(0,o.jsx)(n.code,{children:"type"})," method at the beginning of your callbacks to change the content type."]})}),"\n",(0,o.jsx)(n.h3,{id:"example-of-a-phlame-source-type-control",children:"Example of a Phlame Source Type Control"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{className:"language-php",metastring:"title='index.php'",children:"<?php\r\nsession_start();\r\nrequire_once '.config/_init.php'; \r\n\r\n$router = new Router();\r\n\r\n// Add a static route\r\n$router->addRoute('/<name>', function($name) {\r\n  //highlight-next-line\r\n  Source::type('application/json');\r\n  echo json_encode([\"name\" => $name]);\r\n});\r\n\r\n// More routes can be created\r\n\r\n$router->route();\r\n?>\n"})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(u,{...e})}):u(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>s});var o=t(6540);const r={},i=o.createContext(r);function a(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);